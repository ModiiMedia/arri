// This code was autogenerated by Arri. Do not modify directly.
// For additional documentation visit http://github.com/modiimedia/arri
import "dart:convert";
import "package:arri_client/arri_client.dart";

class ExampleClient {
  final String _baseUrl;
  final Map<String, String> _headers;
  const ExampleClient({
    String baseUrl = "",
    Map<String, String> headers = const {},
  })  : _headers = headers,
        _baseUrl = baseUrl;

  ExampleClientHelloService get hello {
    return ExampleClientHelloService(
      baseUrl: _baseUrl,
      headers: _headers,
    );
  }
}

class ExampleClientHelloService {
  final String _baseUrl;
  final Map<String, String> _headers;
  const ExampleClientHelloService({
    String baseUrl = "",
    Map<String, String> headers = const {},
  })  : _baseUrl = baseUrl,
        _headers = headers;

  Future<HelloGoodbyeWorldResponse> goodbyeWorld(
      HelloGoodbyeWorldParams params) {
    return parsedArriRequest(
      "$_baseUrl/rcp/hello/goodbye-world",
      method: HttpMethod.post,
      headers: _headers,
      params: params.toJson(),
      parser: (body) => HelloGoodbyeWorldResponse.fromJson(json.decode(body)),
    );
  }

  Future<HelloHelloWorldResponse> helloWorld() {
    return parsedArriRequest(
      "$_baseUrl/rcp/hello/hello-world",
      method: HttpMethod.post,
      headers: _headers,
      params: null,
      parser: (body) => HelloHelloWorldResponse.fromJson(json.decode(body)),
    );
  }
}

class HelloGoodbyeWorldParams {
  final String message;
  const HelloGoodbyeWorldParams({
    required this.message,
  });
  factory HelloGoodbyeWorldParams.fromJson(Map<String, dynamic> json) {
    return HelloGoodbyeWorldParams(
      message: json["message"] is String ? json["message"] : "",
    );
  }
  Map<String, dynamic> toJson() {
    return {
      "message": message,
    };
  }

  HelloGoodbyeWorldParams copyWith({
    String? message,
  }) {
    return HelloGoodbyeWorldParams(
      message: message ?? this.message,
    );
  }
}

class HelloGoodbyeWorldResponse {
  final String id;
  final String message;
  const HelloGoodbyeWorldResponse({
    required this.id,
    required this.message,
  });
  factory HelloGoodbyeWorldResponse.fromJson(Map<String, dynamic> json) {
    return HelloGoodbyeWorldResponse(
      id: json["id"] is String ? json["id"] : "",
      message: json["message"] is String ? json["message"] : "",
    );
  }
  Map<String, dynamic> toJson() {
    return {
      "id": id,
      "message": message,
    };
  }

  HelloGoodbyeWorldResponse copyWith({
    String? id,
    String? message,
  }) {
    return HelloGoodbyeWorldResponse(
      id: id ?? this.id,
      message: message ?? this.message,
    );
  }
}

class HelloHelloWorldResponse {
  final String message;
  const HelloHelloWorldResponse({
    required this.message,
  });
  factory HelloHelloWorldResponse.fromJson(Map<String, dynamic> json) {
    return HelloHelloWorldResponse(
      message: json["message"] is String ? json["message"] : "",
    );
  }
  Map<String, dynamic> toJson() {
    return {
      "message": message,
    };
  }

  HelloHelloWorldResponse copyWith({
    String? message,
  }) {
    return HelloHelloWorldResponse(
      message: message ?? this.message,
    );
  }
}

enum ExampleClientEndpoints
    implements Comparable<ExampleClientEndpoints>, ArriEndpoint {
  rcpHelloGoodbyeWorld(
    path: "/rcp/hello/goodbye-world",
    method: HttpMethod.post,
  ),
  rcpHelloHelloWorld(
    path: "/rcp/hello/hello-world",
    method: HttpMethod.post,
  );

  const ExampleClientEndpoints({
    required this.path,
    required this.method,
  });
  @override
  final String path;
  @override
  final HttpMethod method;

  @override
  compareTo(ExampleClientEndpoints other) => name.compareTo(other.name);
}
