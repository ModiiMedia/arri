// This code was autogenerated by Arri. Do not modify directly.
// For additional documentation visit http://github.com/modiimedia/arri
import "dart:convert";
import "package:arri_client/arri_client.dart";

class ExampleClient {
  final String _baseUrl;
  final Map<String, String> _headers;
  const ExampleClient({
    String baseUrl = "",
    Map<String, String> headers = const {},
  }): _headers = headers,
    _baseUrl = baseUrl;
  
  ExampleClientTestService get test {
    return ExampleClientTestService(
      baseUrl: _baseUrl, headers: _headers,
    );
  }
  ExampleClientUsersService get users {
    return ExampleClientUsersService(
      baseUrl: _baseUrl, headers: _headers,
    );
  }
}
class ExampleClientTestService {
  final String _baseUrl;
  final Map<String, String> _headers;
  const ExampleClientTestService({
    String baseUrl = "",
    Map<String, String> headers = const {},
  }): _baseUrl = baseUrl,
  _headers = headers;
  
  Future<TestGetTestResponse> getTest() {
    return parsedArriRequest(
      "$_baseUrl/test/get-test",
      method: HttpMethod.get,
      headers: _headers,
      params: null,
      parser: (body) => TestGetTestResponse.fromJson(json.decode(body)),
    );
  }
}


class ExampleClientUsersService {
  final String _baseUrl;
  final Map<String, String> _headers;
  const ExampleClientUsersService({
    String baseUrl = "",
    Map<String, String> headers = const {},
  }): _baseUrl = baseUrl,
  _headers = headers;
  
  Future<UsersDeleteUserResponse> deleteUser(UsersDeleteUserParams params) {
    return parsedArriRequest(
      "$_baseUrl/users/delete-user",
      method: HttpMethod.get,
      headers: _headers,
      params: params.toJson(),
      parser: (body) => UsersDeleteUserResponse.fromJson(json.decode(body)),
    );
  }
  Future<void> getUser() {
    return parsedArriRequest(
      "$_baseUrl/users/get-user",
      method: HttpMethod.get,
      headers: _headers,
      params: null,
      parser: (body) {},
    );
  }
  Future<UsersGetUsersResponse> getUsers(UsersGetUsersParams params) {
    return parsedArriRequest(
      "$_baseUrl/users/get-users",
      method: HttpMethod.get,
      headers: _headers,
      params: params.toJson(),
      parser: (body) => UsersGetUsersResponse.fromJson(json.decode(body)),
    );
  }
  Future<void> updateUser() {
    return parsedArriRequest(
      "$_baseUrl/users/update-user",
      method: HttpMethod.get,
      headers: _headers,
      params: null,
      parser: (body) {},
    );
  }
}


class TestGetTestResponse {
  final String? message;
  const TestGetTestResponse({
    this.message,
  });
  factory TestGetTestResponse.fromJson(Map<String, dynamic> json) {
    return TestGetTestResponse(
      message: nullableTypeFromDynamic<String>(json["message"]),
    );
  }
  Map<String, dynamic> toJson() {
    return {
      "message": message,
    };
  }
  TestGetTestResponse copyWith({
    String? message,
  }) {
    return TestGetTestResponse(
      message: message ?? this.message,
    );
  }
}


class UsersDeleteUserParams {
  final String? id;
  const UsersDeleteUserParams({
    this.id,
  });
  factory UsersDeleteUserParams.fromJson(Map<String, dynamic> json) {
    return UsersDeleteUserParams(
      id: nullableTypeFromDynamic<String>(json["id"]),
    );
  }
  Map<String, dynamic> toJson() {
    return {
      "id": id,
    };
  }
  UsersDeleteUserParams copyWith({
    String? id,
  }) {
    return UsersDeleteUserParams(
      id: id ?? this.id,
    );
  }
}


class UsersDeleteUserResponse {
  final String? id;
  final String? name;
  const UsersDeleteUserResponse({
    this.id,
    this.name,
  });
  factory UsersDeleteUserResponse.fromJson(Map<String, dynamic> json) {
    return UsersDeleteUserResponse(
      id: nullableTypeFromDynamic<String>(json["id"]),
      name: nullableTypeFromDynamic<String>(json["name"]),
    );
  }
  Map<String, dynamic> toJson() {
    return {
      "id": id,
      "name": name,
    };
  }
  UsersDeleteUserResponse copyWith({
    String? id,
    String? name,
  }) {
    return UsersDeleteUserResponse(
      id: id ?? this.id,
      name: name ?? this.name,
    );
  }
}


class UsersGetUsersParams {
  final  limit;
  const UsersGetUsersParams({
    required this.limit,
  });
  factory UsersGetUsersParams.fromJson(Map<String, dynamic> json) {
    return UsersGetUsersParams(
      limit: .fromJson(json["limit"]),
    );
  }
  Map<String, dynamic> toJson() {
    return {
      "limit": limit.toJson(),
    };
  }
  UsersGetUsersParams copyWith({
    ? limit,
  }) {
    return UsersGetUsersParams(
      limit: limit ?? this.limit,
    );
  }
}


class UsersGetUsersResponse {
  final  total;
  final  items;
  const UsersGetUsersResponse({
    required this.total,
    required this.items,
  });
  factory UsersGetUsersResponse.fromJson(Map<String, dynamic> json) {
    return UsersGetUsersResponse(
      total: .fromJson(json["total"]),
      items: .fromJson(json["items"]),
    );
  }
  Map<String, dynamic> toJson() {
    return {
      "total": total.toJson(),
      "items": items.toJson(),
    };
  }
  UsersGetUsersResponse copyWith({
    ? total,
    ? items,
  }) {
    return UsersGetUsersResponse(
      total: total ?? this.total,
      items: items ?? this.items,
    );
  }
}



enum ExampleClientEndpoints implements Comparable<ExampleClientEndpoints>, ArriEndpoint {
  testGetTest(
        path: "/test/get-test",
        method: HttpMethod.get,
      ),
  usersDeleteUser(
        path: "/users/delete-user",
        method: HttpMethod.get,
      ),
  usersGetUser(
        path: "/users/get-user",
        method: HttpMethod.get,
      ),
  usersGetUsers(
        path: "/users/get-users",
        method: HttpMethod.get,
      ),
  usersUpdateUser(
        path: "/users/update-user",
        method: HttpMethod.get,
      );

  const ExampleClientEndpoints({
    required this.path, required this.method,
  });
  @override
  final String path;
  @override
  final HttpMethod method;

  @override
  compareTo(ExampleClientEndpoints other) => name.compareTo(other.name);
}